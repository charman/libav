#!/usr/bin/python

import datetime
import os
import stat
import struct
import time

SECONDS_BETWEEN_COMMANDS = 6.5

pipename = "metronome.pipe"

if os.path.exists(pipename):
    try:
        os.remove(pipename)
    except IOError as e:
        print "Unable to delete old FIFO pipe - I/O error({0}): {1}".format(e.errno, e.strerror)

try:
    os.mkfifo(pipename)
except IOError as e:
    print "Unable to create FIFO pipe - I/O error({0}): {1}".format(e.errno, e.strerror)

fd = os.open(pipename, os.O_WRONLY)

try:
    start_time = datetime.datetime.now()
    total_cycles = 0
    while 1:
        print "Tempo = 0.5"
        t0 = datetime.datetime.now()
        os.write(fd, struct.pack('d', 0.5))
        t = datetime.datetime.now()
        print "Write to pipe dT = %.2f\n" % (t - t0).total_seconds()

        time.sleep(SECONDS_BETWEEN_COMMANDS)
        print "Temp = 1.5"
        t0 = datetime.datetime.now()
        os.write(fd, struct.pack('d', 1.5))
        t = datetime.datetime.now()
        print "Write to pipe dT = %.2f\n" % (t - t0).total_seconds()
        time.sleep(SECONDS_BETWEEN_COMMANDS)
        
        total_cycles += 2
        current_time = datetime.datetime.now()
        print "Expected elapsed time = %.2f" % (total_cycles * SECONDS_BETWEEN_COMMANDS)
        print "Actual elapsed time   = %.2f\n" % (current_time - start_time).total_seconds()

except OSError as e:
    if e.errno == 32: 
        print "Exception caught - deleting pipe and exiting"
        os.remove(pipename)
